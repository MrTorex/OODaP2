1. Опишите как выглядят и для чего используются блоки try, catch. Что произойдет, если исключение будет сгенерировано вне блока try? Допустимо ли нахождение между блоками try и catch какого-либо кода?

Блоки try и catch используются для обработки исключений в C++. Блок try содержит код, который может вызвать исключение, а блок catch обрабатывает исключение. Если исключение генерируется вне блока try, программа завершится аварийно. Код между блоками try и catch не допускается.

2. Опишите как пишется и для чего используется оператор throw.

Оператор throw используется для генерации исключений. Он может быть использован с любым типом данных для создания исключения. Например: throw std::runtime_error("Error occurred");

3. Опишите предназначение функции terminate(). Приведите примеры классов исключений стандартной библиотеки.

Функция terminate() вызывается, когда исключение не может быть обработано. Она обычно вызывает abort(). Примеры классов исключений стандартной библиотеки включают std::exception, std::runtime_error, std::out_of_range и т.д.

4. Что произойдет, если после блока try отсутствует список обработчиков исключений?

Если после блока try отсутствует список обработчиков исключений и в блоке try генерируется исключение, то вызывается функция terminate().

5. Для чего необходимо использовать абсолютный обработчик?

Абсолютный обработчик используется для обработки всех типов исключений, которые не были обработаны предыдущими обработчиками. Он обычно определяется с помощью catch(...).

6. Что будет, если в блоке catch использовать throw без параметра?

Если в блоке catch использовать throw без параметра, то будет повторно сгенерировано последнее исключение, пойманное блоком catch.

7. Что произойдет, если ни один из обработчиков не соответствует типу сгенерированного исключения?

Если ни один из обработчиков не соответствует типу сгенерированного исключения, вызывается функция terminate().

8. Если в блоке try не генерируются никакие исключения, куда передается управление после выполнения блока try?

Если в блоке try не генерируются никакие исключения, управление передается первому оператору, следующему за последним блоком catch.

9. Прекращается ли процесс создания объекта при генерации исключения внутри конструктора?

Да, процесс создания объекта прекращается при генерации исключения внутри конструктора. Если конструктор не может завершить создание объекта, он должен сгенерировать исключение.

10. Доступны ли переменные, объявленные в блоке try, в блоках catch? Если да, то в каких блоках catch?

Переменные, объявленные в блоке try, не доступны в блоках catch, поскольку они имеют блочную область видимости. Однако переменные, объявленные перед блоком try, будут доступны в блоках catch.